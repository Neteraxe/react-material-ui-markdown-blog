{"version":3,"sources":["theme.jsx","components/postCard/styles.jsx","components/postCard/index.jsx","routes/home/styles.jsx","routes/home/index.jsx","routes/post/styles.jsx","utils/codeblock.jsx","routes/post/index.jsx","components/appBar/styles.jsx","components/appBar/index.jsx","utils/constants.jsx","routes/index.jsx","index.jsx"],"names":["theme","createMuiTheme","palette","primary","light","deepPurple","main","dark","secondary","teal","background","default","grey","overrides","MuiTouchRipple","ripple","color","makeStyles","card","display","cardDetails","flex","cardMedia","width","chip","backgroundColor","common","white","marginRight","spacing","props","post","classes","styles","date","Date","toDateString","title","file","allText","rawFile","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","send","readTextFile","concat","id","match","CardActionArea","className","component","Link","onClick","window","scrollTo","to","Card","CardContent","Typography","variant","author","paragraph","preview","Grid","container","alignItems","justify","item","tags","map","tag","Chip","label","align","Hidden","xsDown","CardMedia","image","thumbnail","sortedPosts","posts","sort","a","b","grid","index","Zoom","in","key","timeout","xs","authorContainer","marginBottom","avatar","backgroundImage","lineHeight","divider","margin","opacity","hero","notFound","CodeBlock","this","language","value","style","PureComponent","defaultProps","postId","params","find","p","markdown","filepath","Fragment","Avatar","src","alt","source","renderers","code","clickable","href","toLowerCase","Divider","gutterBottom","array","newArray","i","length","n","Math","floor","random","shuffle","slice","body","height","flexDirection","justifyContent","maxWidth","padding","textDecoration","zIndex","transition","category","home","list","menuButton","nested","paddingLeft","nestedFont","fontSize","HideOnScroll","children","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","scrollTop","categories","reduce","acc","forEach","React","useState","setOpen","Object","keys","c","expanded","setExpand","toggleDrawer","expand","Toolbar","IconButton","aria-label","edge","Drawer","onClose","role","List","disablePadding","ListItem","button","Collapse","unmountOnExit","render","location","TransitionGroup","CSSTransition","classNames","exact","path","Home","Post","ReactDOM","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.778c7ae9.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { deepPurple, grey, teal } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: deepPurple[300],\r\n      main: deepPurple[500],\r\n      dark: deepPurple[700],\r\n    },\r\n    secondary: {\r\n      light: teal[300],\r\n      main: teal[500],\r\n      dark: teal[700],\r\n    },\r\n    background: {\r\n      default: grey[200],\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTouchRipple: {\r\n      ripple: {\r\n        color: deepPurple[500],\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  card: {\r\n    display: 'flex',\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n  },\r\n  chip: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    color: theme.palette.common.white,\r\n    marginRight: theme.spacing(0.5),\r\n  },\r\n}));\r\n","import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport React from 'react';\r\nimport styles from './styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default (props) => {\r\n  const { post } = props;\r\n  const classes = styles();\r\n\r\n  if (!post) {\r\n    return null;\r\n  }\r\n\r\n  const scrollTop = () => {\r\n    window.scrollTo(0, 0)\r\n  };\r\n\r\n  const date = new Date(post.date).toDateString();\r\n\r\n\r\n  if (!post.title) {\r\n    const readTextFile = (file) => {\r\n      let rawFile = new XMLHttpRequest();\r\n      let allText;\r\n      //false for string\r\n      rawFile.open(\"GET\", file, false);\r\n      rawFile.onreadystatechange = () => {\r\n        if (rawFile.readyState === 4) {\r\n          if (rawFile.status === 200 || rawFile.status === 0) {\r\n            allText = rawFile.responseText;\r\n          }\r\n        }\r\n      };\r\n      rawFile.send(null);\r\n      return allText;\r\n    };\r\n\r\n    const filepath = \"/articles/\".concat(post.id).concat(\".md\");\r\n    let content = readTextFile(filepath);\r\n\r\n    const pattern = /\\s.+/;\r\n    const title = content.match(pattern);\r\n    post.title = title;\r\n  }\r\n\r\n  return (\r\n    <CardActionArea\r\n      className='post-link'\r\n      component={Link}\r\n      onClick={scrollTop}\r\n      to={`/post/${post.id}`}\r\n    >\r\n      <Card className={classes.card}>\r\n        <div className={classes.cardDetails}>\r\n          <CardContent>\r\n            <Typography component='h2' variant='h5'>\r\n              {post.title}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {post.author}\r\n            </Typography>\r\n            <Typography variant='subtitle1' paragraph>\r\n              {post.preview}\r\n            </Typography>\r\n            <Grid container alignItems='center' justify='space-between'>\r\n              <Grid item>\r\n                {post.tags.map((tag) => (\r\n                  <Chip\r\n                    className={classes.chip}\r\n                    // key={tag}\r\n                    label={tag}\r\n                  />\r\n                ))}\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant='subtitle2' color='textSecondary' align='right'>\r\n                  {date}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </div>\r\n        <Hidden xsDown>\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image={post.thumbnail}\r\n            title='Image title'\r\n          />\r\n        </Hidden>\r\n      </Card>\r\n    </CardActionArea>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n\r\n}));","import Grid from '@material-ui/core/Grid';\r\nimport PostCard from '../../components/postCard';\r\nimport posts from '../../posts.json';\r\nimport React from 'react';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport styles from './styles';\r\n\r\nexport default () => {\r\n  const classes = styles();\r\n  const sortedPosts = posts.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n\r\n  return (\r\n    <Grid container className={classes.grid} spacing={2}>\r\n      {sortedPosts.map((post, index) => (\r\n        <Zoom in key={post.id} timeout={200 + index * 100}>\r\n          <Grid item xs={12}>\r\n            <PostCard post={post} />\r\n          </Grid>\r\n        </Zoom>\r\n      ))}\r\n    </Grid>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  authorContainer: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  avatar: {\r\n    backgroundImage: `linear-gradient(to bottom right, ${theme.palette.primary.dark}, ${theme.palette.secondary.light})`,\r\n    color: theme.palette.common.white,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  chip: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    color: theme.palette.common.white,\r\n    marginRight: theme.spacing(0.5),\r\n    '&:hover, &:focus': {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    }\r\n  },\r\n  date: {\r\n    lineHeight: '1.1',\r\n  },\r\n  divider: {\r\n    backgroundImage: `linear-gradient(to right, ${theme.palette.primary.dark}, ${theme.palette.secondary.light})`,\r\n    margin: theme.spacing(2),\r\n    opacity: '0.6',\r\n  },\r\n  hero: {\r\n    width: '100%',\r\n  },\r\n  notFound: {\r\n    marginBottom: theme.spacing(3),\r\n  }\r\n}));\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { dark } from \"react-syntax-highlighter/styles/prism\";\r\n\r\nclass CodeBlock extends PureComponent {\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        language: PropTypes.string\r\n    };\r\n\r\n    static defaultProps = {\r\n        language: null\r\n    };\r\n\r\n    render() {\r\n        const { language, value } = this.props;\r\n        return (\r\n            <SyntaxHighlighter language={language} style={dark}>\r\n\r\n                {value}\r\n            </SyntaxHighlighter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeBlock;","import Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostCard from '../../components/postCard';\r\nimport posts from '../../posts.json';\r\nimport React from 'react';\r\nimport styles from './styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport CodeBlock from '../../utils/codeblock';\r\n\r\nexport default (props) => {\r\n  const { match: { params } } = props;\r\n  const { id: postId } = params;\r\n  const classes = styles();\r\n\r\n  const shuffle = (array) => {\r\n    const newArray = [...array];\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const n = Math.floor(Math.random() * (i + 1));\r\n      [newArray[i], newArray[n]] = [newArray[n], newArray[i]];\r\n    }\r\n    return newArray;\r\n  };\r\n\r\n  const post = posts.find((p) => p.id === postId);\r\n\r\n  if (!post.markdown) {\r\n    const readTextFile = (file) => {\r\n      let rawFile = new XMLHttpRequest();\r\n      let allText;\r\n      //false for string\r\n      rawFile.open(\"GET\", file, false);\r\n      rawFile.onreadystatechange = () => {\r\n        if (rawFile.readyState === 4) {\r\n          if (rawFile.status === 200 || rawFile.status === 0) {\r\n            allText = rawFile.responseText;\r\n          }\r\n        }\r\n      };\r\n      rawFile.send(null);\r\n      return allText;\r\n    };\r\n\r\n    const filepath = \"/articles/\".concat(postId).concat(\".md\");\r\n    post.markdown = readTextFile(filepath);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {post ? (\r\n        <React.Fragment>\r\n          <div className={classes.authorContainer}>\r\n            <div>\r\n              <Avatar className={classes.avatar}>{post.author[0]}</Avatar>\r\n            </div>\r\n            <div>\r\n              <Typography variant='subtitle1' color='textPrimary'>{post.author}</Typography>\r\n              <Typography variant='subtitle2' color='textSecondary' className={classes.date}>{new Date(post.date).toDateString()}</Typography>\r\n            </div>\r\n          </div>\r\n          <img src={post.thumbnail} alt=\"post\" className={classes.hero} />\r\n          <ReactMarkdown\r\n            source={post.markdown}\r\n            renderers={{ code: CodeBlock }}\r\n          />\r\n          <div>\r\n            {post.tags.map((tag) => (\r\n              <Chip\r\n                className={classes.chip}\r\n                clickable\r\n                component='a'\r\n                href={`#${tag.toLowerCase()}`}\r\n                key={tag}\r\n                label={tag}\r\n              />\r\n            ))}\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n          <Typography variant='h4' className={classes.notFound}>No post found :(</Typography>\r\n        )}\r\n      <Divider className={classes.divider} />\r\n      <div>\r\n        <Typography gutterBottom variant='h5'>\r\n          Recommended Posts:\r\n        </Typography>\r\n        <Grid container className={classes.grid} spacing={2}>\r\n          {shuffle(posts).slice(0, 2).map((post) => (\r\n            <Grid item xs={12} key={post.id}>\r\n              <PostCard post={post} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  '@global': {\r\n    body: {\r\n      height: '100vh',\r\n    },\r\n    main: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      flex: '1 1 auto',\r\n      justifyContent: 'space-between',\r\n      margin: '64px auto 0',\r\n      maxWidth: 800,\r\n      padding: theme.spacing(3),\r\n    },\r\n    a: {\r\n      textDecoration: 'none',\r\n    },\r\n    '#root': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100%',\r\n    },\r\n    '.fade-enter': {\r\n      opacity: 0,\r\n      zIndex: 1,\r\n    },\r\n    '.fade-enter.fade-enter-active': {\r\n      opacity: 1,\r\n      transition: 'opacity 250ms ease-in',\r\n    }\r\n  },\r\n  category: {\r\n    flex: '1 1 auto',\r\n  },\r\n  divider: {\r\n    backgroundImage: `linear-gradient(to right, ${theme.palette.primary.dark}, ${theme.palette.secondary.light})`,\r\n    opacity: '0.6',\r\n  },\r\n  home: {\r\n    lineHeight: 2,\r\n    margin: theme.spacing(2),\r\n    transition: '200ms ease',\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n  list: {\r\n    padding: theme.spacing(2, 0),\r\n    width: 250,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  nestedFont: {\r\n    fontSize: 14,\r\n  },\r\n  title: {\r\n    color: theme.palette.common.white,\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    }\r\n  },\r\n}));\r\n","import * as constants from '../../utils/constants.jsx';\r\nimport AppBar from '@material-ui/core/AppBar/AppBar';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport posts from '../../posts';\r\nimport React from 'react';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport styles from './styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HideOnScroll = (props) => {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction='down' in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n};\r\n\r\nconst scrollTop = () => {\r\n  window.scrollTo(0, 0)\r\n};\r\n\r\nconst categories = posts.reduce((acc, post) => {\r\n  post.tags.forEach((tag) => {\r\n    acc[tag] = (acc[tag] || []).concat(post)\r\n  });\r\n  return acc;\r\n}, []);\r\n\r\nexport default (props) => {\r\n  const classes = styles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [expanded, setExpand] = React.useState(Object.keys(categories).reduce((acc, c) => {\r\n    acc[c] = false;\r\n    return acc\r\n  }, {}));\r\n\r\n  const toggleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const expand = (category) => () => {\r\n    setExpand({\r\n      ...expanded,\r\n      [category]: !expanded[category]\r\n    })\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HideOnScroll {...props}>\r\n        <AppBar>\r\n          <Toolbar>\r\n            <IconButton\r\n              aria-label='menu'\r\n              className={classes.menuButton}\r\n              color='inherit'\r\n              edge='start'\r\n              id='menu-button'\r\n              onClick={toggleDrawer}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              className={classes.title}\r\n              component={Link}\r\n              id='site-logo'\r\n              onClick={scrollTop}\r\n              to='/'\r\n              variant='h5'\r\n            >\r\n              {constants.SITE_TITLE}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Drawer\r\n        open={open}\r\n        onClose={toggleDrawer}\r\n        variant='temporary'\r\n      >\r\n        <div\r\n          className={classes.list}\r\n          role='presentation'\r\n        >\r\n          <Typography\r\n            className={classes.home}\r\n            color='textSecondary'\r\n            component={Link}\r\n            onClick={toggleDrawer}\r\n            to='/'\r\n            variant='h5'\r\n          >\r\n            {constants.SITE_TITLE}\r\n          </Typography>\r\n          <Divider className={classes.divider} />\r\n          <List component='div' disablePadding>\r\n            {Object.keys(categories).map((category) => (\r\n              <React.Fragment key={category}>\r\n                <ListItem button onClick={expand(category)}>\r\n                  <Typography className={classes.category} variant='body1'>\r\n                    <strong>{category}</strong>\r\n                  </Typography>\r\n                  {expanded[category] ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={expanded[category]} timeout='auto' unmountOnExit>\r\n                  <List component='div' disablePadding>\r\n                    {categories[category].map((post) => (\r\n                      <ListItem\r\n                        button\r\n                        className={classes.nested}\r\n                        component={Link}\r\n                        key={post.id}\r\n                        onClick={() => {\r\n                          toggleDrawer();\r\n                          scrollTop();\r\n                        }}\r\n                        to={`/post/${post.id}`}\r\n                      >\r\n                        {post.title}\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </Collapse>\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </React.Fragment>\r\n\r\n  )\r\n}","export const SITE_TITLE = 'Qian Xin';\r\n","import { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Home from './home';\r\nimport Post from './post'\r\n\r\nimport AppBar from '../components/appBar/index';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nexport default () => {\r\n  return (\r\n    <Router>\r\n      <AppBar />\r\n      <Route\r\n        render={({ location }) => (\r\n          <TransitionGroup>\r\n            <CSSTransition\r\n              key={location.key}\r\n              classNames='fade'\r\n              timeout={300}\r\n            >\r\n              <main>\r\n                <Switch>\r\n                  <Route exact path='/' component={Home} />\r\n                  <Route path='/post/:id' component={Post} />\r\n                  <Redirect to='/' />\r\n                </Switch>\r\n              </main>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        )}\r\n      />\r\n    </Router>\r\n  )\r\n};\r\n","import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport theme from './theme.jsx';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Routes from \"./routes/index.jsx\"\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme} >\r\n    <CssBaseline />\r\n    < Routes />\r\n  </ThemeProvider>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}